einfügen
  move.kdp
*einfügen
einfügen
  alu.kdp
*einfügen

methode draw0
  markeSetzen;f
  markeSetzen;f
  markeSetzen;f
  markeSetzen;f
  markeSetzen;tr;f
  markeSetzen;f
  markeSetzen;tr;f
  markeSetzen;f
  markeSetzen;f
  markeSetzen;f
  markeSetzen;tr;f
  markeSetzen
*methode

methode draw1
  markeSetzen;f
  markeSetzen;f
  markeSetzen;f
  markeSetzen;f
  markeSetzen
*methode

methode draw2
  markeSetzen;tr;f
  markeSetzen;f
  markeSetzen;tl;f;tl;f;f
  markeSetzen;tr;f
  markeSetzen;tr;f
  markeSetzen;f
  markeSetzen;tl;f
  markeSetzen;f
  markeSetzen;tl;f
  markeSetzen;f
  markeSetzen
*methode

methode draw3
  draw2
  tl;f
  markeSetzen
  tl;f;f
  markeLöschen
  tr;f
  markeLöschen
*methode

methode draw4
  markeSetzen;f
  markeSetzen;f
  markeSetzen;f
  markeSetzen;f
  markeSetzen;t2;f;f;tl;f
  markeSetzen;f
  markeSetzen;tr;f
  markeSetzen;f
  markeSetzen
*methode

methode draw5
  markeSetzen;tr;f
  markeSetzen;f
  markeSetzen;tl;f
  markeSetzen;f
  markeSetzen;tl;f
  markeSetzen;f
  markeSetzen;tr;f
  markeSetzen;f
  markeSetzen;tr;f
  markeSetzen;f
  markeSetzen
*methode

methode draw7
  markeSetzen;tr;f
  markeSetzen;f
  markeSetzen;t2;f;f;tr;f
  markeSetzen;f
  markeSetzen;f
  markeSetzen;f
  markeSetzen
*methode

methode draw8
  draw0
  tr;schritt(2)
  markeSetzen
*methode

methode draw6
  draw8
  tl;f;tl;f
  markeLöschen
*methode

methode draw9
  draw5
  tr
  f;f;f
  tr
  f;f
  markeSetzen
*methode

methode toDecimal1
  toAlu
  tr
  schritt(17)
  tl
*methode

methode toDecimal2
  toDecimal1
  schritt(6)
*methode

methode toDecimal3
  toDecimal1
  schritt(12)
*methode

methode toNextDecimal3Digit
  toDecimal3
  tr
  wiederhole solange istMarke
    schritt(4)
  *wiederhole
  tl
*methode

methode toNextDecimalRemainderDigit
  toDecimal3;tl;schritt(10);t2
  wiederhole solange istMarke
    schritt(4)
  *wiederhole
  tl
*methode

methode clearDecimal3
  toDecimal3;l
  wiederhole 4 mal
    r
    wiederhole 3 mal
      markeLöschen;f
      markeLöschen;f
      markeLöschen;f
      markeLöschen;f
      markeLöschen
      t2;schritt(4);tl;f;tl
    *wiederhole
  *wiederhole

  { clear remainder }
  toDecimal3;tl;schritt(10);tr;l
  wiederhole 2 mal
    r
    wiederhole 3 mal
      markeLöschen;f
      markeLöschen;f
      markeLöschen;f
      markeLöschen;f
      markeLöschen
      t2;schritt(4);tl;f;tl
    *wiederhole
  *wiederhole
*methode

methode clearBlocks
  toRegister;f
  wiederhole 4 mal
    wiederhole solange istZiegel
      aufheben
    *wiederhole
    r
  *wiederhole
*methode

methode registerToBlocks
  toRegister;tr

  schritt(13)
  wenn istMarke dann
    markeLöschen
    t2;schritt(13);tr;f
    hinlegen(2);r
    hinlegen(9);r
    hinlegen(1);r
    hinlegen(8)
    tl;schritt(3);tl;f;tl
  sonst
    t2;schritt
    wenn istMarke dann
        markeLöschen
        schritt(12);tr;f
        hinlegen(6);r
        hinlegen(9);r
        r
        hinlegen(4)
        tl;schritt(3);tl;f;tl
    sonst
      schritt
      wenn istMarke dann
        markeLöschen
        schritt(11);tr;f
        hinlegen(8);r
        hinlegen(4);r
        r
        hinlegen(2)
        tl;schritt(3);tl;f;tl
      sonst
        schritt(11);t2
      *wenn
    *wenn
  *wenn

  wiederhole solange istWesten
    wiederhole solange istWesten
      wenn istZiegel(blau) dann
        rechtsDrehen
      sonst
        wenn istMarke dann
          markeLöschen
          rechtsDrehen;rechtsDrehen
          wiederhole solange nicht istWand
            schritt
            markeSetzen
          *wiederhole
        sonst
          schritt
        *wenn
      *wenn
    *wiederhole
    wenn istOsten dann
      rechtsDrehen;f
      wenn istZiegel(9) dann
        aufheben(9)
        r
        wenn istZiegel(9) dann
          aufheben(9)
          r
          wenn istZiegel(9) dann
            aufheben(9)
            r
            hinlegen
            l
          sonst
            hinlegen
          *wenn
          l
        sonst
          hinlegen
        *wenn
        l
      sonst
        hinlegen
      *wenn
      t2;f;tl
    sonst
      rechtsDrehen
    *wenn
  *wiederhole
*methode

methode blocksToDecimal
  wenn nicht istZiegel dann
    toNextDecimal3Digit
    draw0
  sonst wenn istZiegel(1) dann
    toNextDecimal3Digit
    draw1
  sonst wenn istZiegel(2) dann
    toNextDecimal3Digit
    draw2
  sonst wenn istZiegel(3) dann
    toNextDecimal3Digit
    draw3
  sonst wenn istZiegel(4) dann
    toNextDecimal3Digit
    draw4
  sonst wenn istZiegel(5) dann
    toNextDecimal3Digit
    draw5
  sonst wenn istZiegel(6) dann
    toNextDecimal3Digit
    draw6
  sonst wenn istZiegel(7) dann
    toNextDecimal3Digit
    draw7
  sonst wenn istZiegel(8) dann
    toNextDecimal3Digit
    draw8
  sonst wenn istZiegel(9) dann
    toNextDecimal3Digit
    draw9
  *wenn
  *wenn
  *wenn
  *wenn
  *wenn
  *wenn
  *wenn
  *wenn
  *wenn
  *wenn
*methode

methode blocksToDecimalRemainder
  wenn nicht istZiegel dann
    toNextDecimalRemainderDigit
    draw0
  sonst wenn istZiegel(1) dann
    toNextDecimalRemainderDigit
    draw1
  sonst wenn istZiegel(2) dann
    toNextDecimalRemainderDigit
    draw2
  sonst wenn istZiegel(3) dann
    toNextDecimalRemainderDigit
    draw3
  sonst wenn istZiegel(4) dann
    toNextDecimalRemainderDigit
    draw4
  sonst wenn istZiegel(5) dann
    toNextDecimalRemainderDigit
    draw5
  sonst wenn istZiegel(6) dann
    toNextDecimalRemainderDigit
    draw6
  sonst wenn istZiegel(7) dann
    toNextDecimalRemainderDigit
    draw7
  sonst wenn istZiegel(8) dann
    toNextDecimalRemainderDigit
    draw8
  sonst wenn istZiegel(9) dann
    toNextDecimalRemainderDigit
    draw9
  *wenn
  *wenn
  *wenn
  *wenn
  *wenn
  *wenn
  *wenn
  *wenn
  *wenn
  *wenn
*methode

methode registerToDecimal
  registerToBlocks

  toRegister;f
  blocksToDecimal

  toRegister;f;r
  blocksToDecimal

  toRegister;f;r;r
  blocksToDecimal

  toRegister;f;r;r;r
  blocksToDecimal

  clearBlocks
*methode

methode registerToDecimalNegative
  registerToBlocks

  toRegister;f
  blocksToDecimal

  toRegister;f;r
  blocksToDecimal

  toDecimal3
  schritt(2);tr;schritt(8)
  markeSetzen;f
  markeSetzen

  clearBlocks
*methode

methode registerToDecimalRemainder
  registerToBlocks

  toRegister;f
  blocksToDecimalRemainder

  toRegister;f;r
  blocksToDecimalRemainder

  clearBlocks
*methode

methode decimalToInput2
  { starts at top right corner looking south }
  f;f;tr;f
  wenn nicht istMarke dann {0,1,7}
    f
    wenn istMarke dann {0}
      toInput2; clear
    sonst
      tr;schritt(2)
      wenn istMarke dann {7}
        toInput2
        clear
        tr
        markeSetzen;f
        markeSetzen;f
        markeSetzen
      sonst {0, 1}
        tr; schritt(2)
        wenn istMarke dann {1}
          toInput2; clear
          markeSetzen
        sonst {0}
          toInput2; clear
        *wenn
      *wenn
    *wenn
  sonst {2,3,4,5,6,8,9}
    f;tl;f
    wenn istMarke dann {2,6,8}
      t2;f;f
      wenn istMarke dann {6,8}
        tr;f;f
        wenn istMarke dann {8}
        toInput2;clear;tr
        f;f;f
        markeSetzen
        sonst {6}
        toInput2;clear;tr
        f
        markeSetzen;f
        markeSetzen
        *wenn
      sonst {2}
        toInput2;clear;tr
        f;markeSetzen
      *wenn
    sonst {3,4,5,9}
      f
      wenn istMarke dann {3,5,9}
        t2;f;f;f
        wenn nicht istMarke dann {3}
          toInput2;clear;tr
          markeSetzen;f;markeSetzen
        sonst {5,9}
          tr;f;f
          wenn istMarke dann {9}
            toInput2;clear;tr
            markeSetzen
            f;f;f
            markeSetzen
          sonst {5}
            toInput2;clear;tr
            markeSetzen
            f;f
            markeSetzen
          *wenn
        *wenn
      sonst {4}
        toInput2;clear;tr
        f;f
        markeSetzen
      *wenn
    *wenn
  *wenn
*methode
